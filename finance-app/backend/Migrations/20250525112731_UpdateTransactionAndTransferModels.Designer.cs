// <auto-generated />
using System;
using Backend.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace backend.Migrations
{
    [DbContext(typeof(FinanceAppDbContext))]
    [Migration("20250525112731_UpdateTransactionAndTransferModels")]
    partial class UpdateTransactionAndTransferModels
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Backend.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("EmployeeNumber"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Attrition")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("BusinessTravel")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("DailyRate")
                        .HasColumnType("int");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("DistanceFromHome")
                        .HasColumnType("int");

                    b.Property<int>("Education")
                        .HasColumnType("int");

                    b.Property<string>("EducationField")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("EmployeeCount")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentSatisfaction")
                        .HasColumnType("int");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("HourlyRate")
                        .HasColumnType("int");

                    b.Property<int>("JobInvolvement")
                        .HasColumnType("int");

                    b.Property<int>("JobLevel")
                        .HasColumnType("int");

                    b.Property<string>("JobRole")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("JobSatisfaction")
                        .HasColumnType("int");

                    b.Property<string>("MaritalStatus")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("MonthlyIncome")
                        .HasColumnType("int");

                    b.Property<int>("MonthlyRate")
                        .HasColumnType("int");

                    b.Property<int>("NumCompaniesWorked")
                        .HasColumnType("int");

                    b.Property<string>("Over18")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("OverTime")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("PercentSalaryHike")
                        .HasColumnType("int");

                    b.Property<int>("PerformanceRating")
                        .HasColumnType("int");

                    b.Property<int>("RelationshipSatisfaction")
                        .HasColumnType("int");

                    b.Property<int>("StandardHours")
                        .HasColumnType("int");

                    b.Property<int>("StockOptionLevel")
                        .HasColumnType("int");

                    b.Property<int>("TotalWorkingYears")
                        .HasColumnType("int");

                    b.Property<int>("TrainingTimesLastYear")
                        .HasColumnType("int");

                    b.Property<int>("WorkLifeBalance")
                        .HasColumnType("int");

                    b.Property<int>("YearsAtCompany")
                        .HasColumnType("int");

                    b.Property<int>("YearsInCurrentRole")
                        .HasColumnType("int");

                    b.Property<int>("YearsSinceLastPromotion")
                        .HasColumnType("int");

                    b.Property<int>("YearsWithCurrManager")
                        .HasColumnType("int");

                    b.HasKey("EmployeeNumber");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("Backend.Models.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("EmployeeNumber")
                        .HasColumnType("int");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeNumber");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("Backend.Models.Transfer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ExternalBankIban")
                        .HasMaxLength(34)
                        .HasColumnType("varchar(34)");

                    b.Property<int>("FromEmployeeNumber")
                        .HasColumnType("int");

                    b.Property<int?>("ToEmployeeNumber")
                        .HasColumnType("int");

                    b.Property<DateTime>("TransferDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("FromEmployeeNumber");

                    b.HasIndex("ToEmployeeNumber");

                    b.ToTable("Transfers");
                });

            modelBuilder.Entity("Backend.Models.Transaction", b =>
                {
                    b.HasOne("Backend.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Backend.Models.Transfer", b =>
                {
                    b.HasOne("Backend.Models.Employee", "FromEmployee")
                        .WithMany()
                        .HasForeignKey("FromEmployeeNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Backend.Models.Employee", "ToEmployee")
                        .WithMany()
                        .HasForeignKey("ToEmployeeNumber");

                    b.Navigation("FromEmployee");

                    b.Navigation("ToEmployee");
                });
#pragma warning restore 612, 618
        }
    }
}
